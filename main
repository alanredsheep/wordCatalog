#include<iostream>
#include<fstream>   
#include<string>
#include<vector>
#include<algorithm>
using  namespace  std;
void Preprocessing(vector<string> &textbook);
void workBook(vector<string> &textbook);
int main(void)
{
	vector<string> textbook;
	textbook.reserve(100);//单词量
	Preprocessing(textbook);
	workBook(textbook);
	for (auto &i : textbook)
	{
		cout << i << endl;
	}
	getchar();
	getchar();
	textbook.clear();
	return 0;
}
void workBook(vector<string> &textbook)//单词排序
{
	sort(textbook.begin(), textbook.end());
}
void Preprocessing(vector<string> &textbook)
{
	string textbName;
	string workbName;
	cout << "输入文件名（不要含有空格，包含文件格式名）：" << endl;
	cin >> textbName;
	//textbName.erase(textbName.end() - 4, textbName.end());
	workbName = textbName.substr(0,textbName.size()-4) + "_workBook.txt";
	cout << textbName << endl;
	cout << workbName << endl;
	ifstream fstrm(textbName, ifstream::in);
	if (!fstrm)
	{
		cerr << "open error!" << endl;
		exit(1);
	}
	string currentWord;
	while (!fstrm.eof())
	{
		fstrm >> currentWord;
		textbook.push_back(currentWord);
		for (auto i = textbook.begin();i != textbook.end() - 1;i++)
		{
			if (*i != currentWord)
			{
				continue;//继续找
			}
			else if (*i == currentWord)
			{
				textbook.pop_back();
				break;
			}
			else
				cerr << "未知错误 01" << endl;
		}
	}
}
